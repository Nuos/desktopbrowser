/* Generated by SharpKit 5 v5.4.9 */

var win = null;
var Selector = null;
var SiteProxy = null;
var PageSize = 10;
SiteProxy = new DesktopBrowser.client.SiteProxy();
win = window;
function DefaultClient_Load(){
    if (Data.MoreAvailable === false){
        $(".Pager .Next").addClass("disabled").attr("disabled", "disabled");
    }
    Selector = new DesktopBrowser.client.Selector();
    Selector.Selected = function (t){
        t.className = "Selected";
        SaveSelection($(t).find(".NameCell A").text());
    };
    Selector.UnSelected = function (t){
        t.className = "";
    };
    UpdateClock();
    RestoreSelection();
    $(win).keydown(function (e){
        if (e.target != null && e.target.nodeName == "INPUT")
            return;
        if (e.which == DesktopBrowser.client.Keys.Up){
            e.preventDefault();
            Up();
        }
        else if (e.which == DesktopBrowser.client.Keys.Down){
            e.preventDefault();
            Down();
        }
        else if (e.which == DesktopBrowser.client.Keys.PageDown){
            e.preventDefault();
            PageDown();
        }
        else if (e.which == DesktopBrowser.client.Keys.PageUp){
            e.preventDefault();
            PageUp();
        }
        else if (e.which == DesktopBrowser.client.Keys.Enter){
            e.preventDefault();
            Enter();
        }
        else {
            $("#tbSearch").get(0).focus();
        }
    });
};
function WriteLine(obj){
    win.document.body.appendChild(win.document.createTextNode(obj));
    win.document.body.appendChild(win.document.createElement("br"));
};
function CanMoveSelection(by){
    return MoveSelection(by, false);
};
function MoveSelection(by, preview){
    var by2 = by;
    var row = $(Selector.SelectedItem);
    if (row.length == 0)
        return false;
    while (by2 > 0){
        if (row.next().length == 0)
            break;
        row = row.next();
        by2--;
    }
    while (by2 < 0){
        if (row.prev().length == 0)
            break;
        row = row.prev();
        by2++;
    }
    if (row.length == 0 || by == by2)
        return false;
    if (!preview){
        var row2 = row.get(0);
        Select(row2);
    }
    return true;
};
function Select(row){
    Selector.Select(row);
    var pos = $(row).offset();
    if (pos.top < win.pageYOffset){
        row.scrollIntoView(true);
    }
    else if (pos.top > win.pageYOffset + win.innerHeight){
        row.scrollIntoView(false);
    }
};
function PageDown(){
    return MoveSelection(PageSize * 1, false);
};
function PageUp(){
    return MoveSelection(PageSize * -1, false);
};
function Enter(){
    var anchor = $(Selector.SelectedItem).find("a").get(0);
    if (anchor.nodeName == "A"){
        SimulateClick(anchor);
        return true;
    }
    return false;
};
function SelectFirstItem(){
    var first = $("grdFiles TBODY TR").first().get(0);
    if (first != null){
        Select(first);
        return true;
    }
    return false;
};
function Down(){
    if (!MoveSelection(1, false))
        return SelectFirstItem();
    return false;
};
function Up(){
    if (!MoveSelection(-1, false))
        return SelectFirstItem();
    return false;
};
function RestoreSelection(){
    var folder = $("#tbFilename").val();
    var filename = GetStorageItem(folder);
    if (filename != null && filename.length > 0){
        $("#grdFiles .NameCell A").each(function (i, el){
            var x = $(el);
            if (x.text() == filename){
                Selector.Select(x.parents("tr").first().get(0));
                return false;
            }
        });
    }
};
function GetStorageItem(key){
    return win.localStorage.getItem(key);
};
function SetStorageItem(key, value){
    win.localStorage.setItem(key, value);
};
function SaveSelection(filename){
    var folder = $("#tbFilename").val();
    var nextYear = new Date();
    nextYear.setFullYear(nextYear.getFullYear() + 4);
    SetStorageItem(folder, filename);
};
function UpdateClock(){
    $("#divTime").text(new Date().format("h:MM tt"));
    $("#divDate").text(new Date().format("ddd, mmm d"));
    win.setTimeout(UpdateClock, 5000);
};
function Execute(path){
    new DesktopBrowser.client.SiteProxy().Execute(path, null);
};
function OpenFile(path){
    new DesktopBrowser.client.SiteProxy().Execute(path, null);
};
function GetSelectedPath(){
    if (Selector.SelectedItem == null)
        return null;
    var filePath = $(Selector.SelectedItem).find(".ihFilePath").val();
    return filePath;
};
function btnDelete_click(){
    var path = GetSelectedPath();
    if (path == null)
        return;
    if (!win.confirm("are you sure you want to permanantly delete the path: " + path))
        return;
    SiteProxy.Delete(path, function (t){
        win.location.reload();
    });
};
function Filter(el, exp){
    var x = $(el);
    x.parents("tr").first().toggle(x.text().search(exp) >= 0);
};
function tbFolder_keydown(e){
    if (e.keyCode == 13){
        Go();
    }
};
function Go(){
    var newPath = $("#tbFolder").val();
    win.location.href = "?p=" + encodeURIComponent(newPath);
};
function btnGo_click(e){
    Go();
};
function tbSearch_keyup(e){
    var search = $("#tbSearch").val();
    var exp = new RegExp(DesktopBrowser.client.ClientExtensions.RegexEscape(search), "i");
    $("#grdFiles .NameCell A").each(function (i, el){
        Filter(el, exp);
    });
};
function SimulateClick(anchor){
    var a = $(anchor);
    a.trigger("click", null);
    var href = a.attr("href");
    if (href != null && href.length > 0){
        var target = a.attr("target");
        if (target == "_blank")
            win.open(href, "");
        else
            win.location.href = href;
    }
};
if (typeof(DesktopBrowser) == "undefined")
    var DesktopBrowser = {};
if (typeof(DesktopBrowser.client) == "undefined")
    DesktopBrowser.client = {};
DesktopBrowser.client.Selector = function (){
    this.Selected = null;
    this.UnSelected = null;
    this.SelectedItem = null;
};
DesktopBrowser.client.Selector.prototype.Select = function (el){
    if (this.SelectedItem == el)
        return;
    var unselected = this.SelectedItem;
    this.SelectedItem = el;
    if (unselected != null && this.UnSelected != null)
        this.UnSelected(unselected);
    if (this.SelectedItem != null && this.Selected != null)
        this.Selected(this.SelectedItem);
};

